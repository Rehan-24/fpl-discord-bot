import subprocess, shlex, json, sys, os, shutil, glob

CMD = "python mundo_scraper.py https://www.fplmundo.com/723566"
LABEL = "prem"

def run_once(cmd, allow_dump_retry=True):
    proc = subprocess.run(shlex.split(cmd), text=True, capture_output=True)
    output = (proc.stdout or "") + (proc.stderr or "")
    lines = [l.strip() for l in output.splitlines() if l.strip()]

    if proc.returncode != 0 and allow_dump_retry:
        # Try again with --dump to create mundo_dump.html & mundo_json_*.txt
        dump_proc = subprocess.run(shlex.split(cmd + " --dump"), text=True, capture_output=True)
        dump_out = (dump_proc.stdout or "") + (dump_proc.stderr or "")
        lines.extend([l.strip() for l in dump_out.splitlines() if l.strip()])
        # Rename dumps to league-specific names so CI can upload both
        if os.path.exists("mundo_dump.html"):
            shutil.move("mundo_dump.html", f"{LABEL}_dump.html")
        for i, path in enumerate(sorted(glob.glob("mundo_json_*.txt")), start=1):
            base = f"{LABEL}_json_{i}.txt"
            if os.path.exists(base):
                os.remove(base)
            shutil.move(path, base)
    return lines

def main():
    runs = []
    for _ in range(2):  # run twice
        runs.append(run_once(CMD))

    seen = set()
    merged = []
    for lines in runs:
        for l in lines:
            if l not in seen:
                merged.append(l)
                seen.add(l)

    # Filter only /publish_news lines for the payload
    publish_lines = [l for l in merged if l.startswith("/publish_news ")]

    if not publish_lines:
        sys.stderr.write("Warning: no /publish_news commands generated by mundo_scraper.py (prem)\n")

    print(json.dumps({"source": "premier", "commands": publish_lines}, ensure_ascii=False, indent=2))

if __name__ == "__main__":
    main()
